import * as React from 'react';
import * as Menubar from '@radix-ui/react-menubar';
import type { MenuBarRootVariantProps, MenuBarContentVariantProps, MenuBarItemVariantProps, MenuBarSeparatorVariantProps, MenuBarTriggerVariantProps } from './menu.bar.styles';
import { baseComponentProps } from '../@shared/types';
/**
 *
 * NOTES:
 *
 * Forwards the ref to the underlying DOM element.
 *
 * const [Primitive] = React.forwardRef<React.ElementRef<typeof Styled[Component]>, Props>
 *
 */
/**
 *
 * @types
 */
/**
 *
 * ROOT_MENU_BAR..
 *
 * the root element that wraps the menu bar.
 *
 * root style.
 *
 * Props:
 * - asChild: boolean
 * - defaultValue: string
 * - value: string
 * - onValueChange: (value: string) => void
 * - dir: 'ltr' | 'rtl'
 * - loop: boolean
 */
type MenuBarPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Root>;
type MenuBarProps = MenuBarPrimitiveProps & MenuBarRootVariantProps;
/**
 *
 *
 *
 * MENU_SUB
 *
 */
type MenuBarSUBPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Sub>;
type MenuBarSUBProps = MenuBarSUBPrimitiveProps;
/**
 *
 * MENU_BAR_MENU..
 *
 * the menu element that wraps the menu bar.
 *
 * Props:
 * - value: string
 * * A unique value that associates the item with an active value
 * * when the navigation menu is controlled.
 * * This prop is managed automatically when uncontrolled.
 *
 */
/**
 *
 * MENU_BAR_TRIGGER..
 *
 * button element that triggers the menu to open.
 */
type MenuBarTriggerPrimitiveProps = baseComponentProps & MenuBarTriggerVariantProps & React.ComponentPropsWithRef<typeof Menubar.Trigger>;
/**
 *
 * MENU_BAR_SUB_TRIGGER..
 *
 * button element that triggers the sub menu to open. (offset)
 *
 * <Menubar.Sub>
 *   <Menubar.SubTrigger />
 *   <Menubar.Portal>
 *   <Menubar.SubContent />
 *   </Menubar.Portal>
 *  </Menubar.Sub>
 */
type MenuBarSubTriggerPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.SubTrigger>;
type MenuBarContentPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Content>;
type MenuBarContentProps = MenuBarContentVariantProps & MenuBarContentPrimitiveProps & {
    label?: string;
};
/**
 *
 *
 * MENU_SUB_CONTENT & PORTAL..
 */
type MenuBarSubContentPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.SubContent>;
/**
 *
 * MENU_ITEM..
 *
 * a menu item that renders inside of MENU_BAR_CONTENT.
 *
 * also could be named (option)
 */
type asHrefProps = {
    as?: React.ElementType;
    href?: string;
};
type MenuBarItemPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Item> & asHrefProps;
type MenuBarItemProps = MenuBarItemPrimitiveProps & MenuBarItemVariantProps;
/**
 *
 * MENU_ITEM..
 *
 * a menu item that renders inside of MENU_BAR_CONTENT.
 *
 * also could be named (option)
 */
type MenuBarGroupPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Group>;
type MenuBarSeparatorPrimitiveProps = baseComponentProps & React.ComponentPropsWithRef<typeof Menubar.Separator>;
type MenuBarSeparatorProps = MenuBarSeparatorPrimitiveProps & MenuBarSeparatorVariantProps;
export declare const MenuBar: React.ForwardRefExoticComponent<Pick<MenuBarProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "value" | "onValueChange" | "loop" | "bordered" | "css"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarSub: ({ children, css, ...rest }: MenuBarSUBProps) => JSX.Element;
export declare const MenuBarTrigger: React.ForwardRefExoticComponent<Pick<MenuBarTriggerPrimitiveProps, "form" | "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "value" | "white" | "black" | "css" | "slate" | "autoFocus" | "disabled" | "formAction" | "formEncType" | "formMethod" | "formNoValidate" | "formTarget" | "name" | "type"> & React.RefAttributes<HTMLButtonElement>>;
export declare const MenuBarSubTrigger: React.ForwardRefExoticComponent<Pick<MenuBarSubTriggerPrimitiveProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "css" | "disabled" | "textValue"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarLabel: import("@stitches/react/types/styled-component").StyledComponent<React.ForwardRefExoticComponent<Menubar.MenubarLabelProps & React.RefAttributes<HTMLDivElement>>, {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export declare const MenuBarContent: React.ForwardRefExoticComponent<Pick<MenuBarContentProps, "label" | "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "loop" | "blur" | "sticky" | "css" | "side" | "sideOffset" | "align" | "alignOffset" | "arrowPadding" | "collisionBoundary" | "collisionPadding" | "hideWhenDetached" | "avoidCollisions" | "onCloseAutoFocus" | "onEscapeKeyDown" | "onPointerDownOutside" | "onFocusOutside" | "onInteractOutside" | "forceMount" | "primary" | "neon"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarSubContent: React.ForwardRefExoticComponent<Pick<MenuBarSubContentPrimitiveProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "loop" | "sticky" | "css" | "sideOffset" | "alignOffset" | "arrowPadding" | "collisionBoundary" | "collisionPadding" | "hideWhenDetached" | "avoidCollisions" | "onEscapeKeyDown" | "onPointerDownOutside" | "onFocusOutside" | "onInteractOutside" | "forceMount"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarItem: React.ForwardRefExoticComponent<Pick<MenuBarItemProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "inset" | "css" | "as" | "disabled" | "textValue" | "href"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarGroup: React.ForwardRefExoticComponent<Pick<MenuBarGroupPrimitiveProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "css"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarItemIndicator: import("@stitches/react/types/styled-component").StyledComponent<React.ForwardRefExoticComponent<Menubar.MenubarItemIndicatorProps & React.RefAttributes<HTMLSpanElement>>, {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export declare const MenuBarSeparator: React.ForwardRefExoticComponent<Pick<MenuBarSeparatorProps, "slot" | "style" | "title" | "key" | "defaultChecked" | "defaultValue" | "suppressContentEditableWarning" | "suppressHydrationWarning" | "accessKey" | "className" | "contentEditable" | "contextMenu" | "dir" | "draggable" | "hidden" | "id" | "lang" | "nonce" | "placeholder" | "spellCheck" | "tabIndex" | "translate" | "radioGroup" | "role" | "about" | "datatype" | "inlist" | "prefix" | "property" | "resource" | "typeof" | "vocab" | "autoCapitalize" | "autoCorrect" | "autoSave" | "color" | "itemProp" | "itemScope" | "itemType" | "itemID" | "itemRef" | "results" | "security" | "unselectable" | "inputMode" | "is" | "aria-activedescendant" | "aria-atomic" | "aria-autocomplete" | "aria-busy" | "aria-checked" | "aria-colcount" | "aria-colindex" | "aria-colspan" | "aria-controls" | "aria-current" | "aria-describedby" | "aria-details" | "aria-disabled" | "aria-dropeffect" | "aria-errormessage" | "aria-expanded" | "aria-flowto" | "aria-grabbed" | "aria-haspopup" | "aria-hidden" | "aria-invalid" | "aria-keyshortcuts" | "aria-label" | "aria-labelledby" | "aria-level" | "aria-live" | "aria-modal" | "aria-multiline" | "aria-multiselectable" | "aria-orientation" | "aria-owns" | "aria-placeholder" | "aria-posinset" | "aria-pressed" | "aria-readonly" | "aria-relevant" | "aria-required" | "aria-roledescription" | "aria-rowcount" | "aria-rowindex" | "aria-rowspan" | "aria-selected" | "aria-setsize" | "aria-sort" | "aria-valuemax" | "aria-valuemin" | "aria-valuenow" | "aria-valuetext" | "children" | "dangerouslySetInnerHTML" | "onCopy" | "onCopyCapture" | "onCut" | "onCutCapture" | "onPaste" | "onPasteCapture" | "onCompositionEnd" | "onCompositionEndCapture" | "onCompositionStart" | "onCompositionStartCapture" | "onCompositionUpdate" | "onCompositionUpdateCapture" | "onFocus" | "onFocusCapture" | "onBlur" | "onBlurCapture" | "onChange" | "onChangeCapture" | "onBeforeInput" | "onBeforeInputCapture" | "onInput" | "onInputCapture" | "onReset" | "onResetCapture" | "onSubmit" | "onSubmitCapture" | "onInvalid" | "onInvalidCapture" | "onLoad" | "onLoadCapture" | "onError" | "onErrorCapture" | "onKeyDown" | "onKeyDownCapture" | "onKeyPress" | "onKeyPressCapture" | "onKeyUp" | "onKeyUpCapture" | "onAbort" | "onAbortCapture" | "onCanPlay" | "onCanPlayCapture" | "onCanPlayThrough" | "onCanPlayThroughCapture" | "onDurationChange" | "onDurationChangeCapture" | "onEmptied" | "onEmptiedCapture" | "onEncrypted" | "onEncryptedCapture" | "onEnded" | "onEndedCapture" | "onLoadedData" | "onLoadedDataCapture" | "onLoadedMetadata" | "onLoadedMetadataCapture" | "onLoadStart" | "onLoadStartCapture" | "onPause" | "onPauseCapture" | "onPlay" | "onPlayCapture" | "onPlaying" | "onPlayingCapture" | "onProgress" | "onProgressCapture" | "onRateChange" | "onRateChangeCapture" | "onResize" | "onResizeCapture" | "onSeeked" | "onSeekedCapture" | "onSeeking" | "onSeekingCapture" | "onStalled" | "onStalledCapture" | "onSuspend" | "onSuspendCapture" | "onTimeUpdate" | "onTimeUpdateCapture" | "onVolumeChange" | "onVolumeChangeCapture" | "onWaiting" | "onWaitingCapture" | "onAuxClick" | "onAuxClickCapture" | "onClick" | "onClickCapture" | "onContextMenu" | "onContextMenuCapture" | "onDoubleClick" | "onDoubleClickCapture" | "onDrag" | "onDragCapture" | "onDragEnd" | "onDragEndCapture" | "onDragEnter" | "onDragEnterCapture" | "onDragExit" | "onDragExitCapture" | "onDragLeave" | "onDragLeaveCapture" | "onDragOver" | "onDragOverCapture" | "onDragStart" | "onDragStartCapture" | "onDrop" | "onDropCapture" | "onMouseDown" | "onMouseDownCapture" | "onMouseEnter" | "onMouseLeave" | "onMouseMove" | "onMouseMoveCapture" | "onMouseOut" | "onMouseOutCapture" | "onMouseOver" | "onMouseOverCapture" | "onMouseUp" | "onMouseUpCapture" | "onSelect" | "onSelectCapture" | "onTouchCancel" | "onTouchCancelCapture" | "onTouchEnd" | "onTouchEndCapture" | "onTouchMove" | "onTouchMoveCapture" | "onTouchStart" | "onTouchStartCapture" | "onPointerDown" | "onPointerDownCapture" | "onPointerMove" | "onPointerMoveCapture" | "onPointerUp" | "onPointerUpCapture" | "onPointerCancel" | "onPointerCancelCapture" | "onPointerEnter" | "onPointerEnterCapture" | "onPointerLeave" | "onPointerLeaveCapture" | "onPointerOver" | "onPointerOverCapture" | "onPointerOut" | "onPointerOutCapture" | "onGotPointerCapture" | "onGotPointerCaptureCapture" | "onLostPointerCapture" | "onLostPointerCaptureCapture" | "onScroll" | "onScrollCapture" | "onWheel" | "onWheelCapture" | "onAnimationStart" | "onAnimationStartCapture" | "onAnimationEnd" | "onAnimationEndCapture" | "onAnimationIteration" | "onAnimationIterationCapture" | "onTransitionEnd" | "onTransitionEndCapture" | "asChild" | "css" | "primary" | "neon"> & React.RefAttributes<HTMLDivElement>>;
export declare const MenuBarMenu: import("@stitches/react/types/styled-component").StyledComponent<{
    (props: Menubar.ScopedProps<Menubar.MenubarMenuProps>): JSX.Element;
    displayName: string;
}, {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export declare const MenuBarRightSlot: import("@stitches/react/types/styled-component").StyledComponent<"div", {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export declare const MenuBarCheckboxItem: import("@stitches/react/types/styled-component").StyledComponent<React.ForwardRefExoticComponent<Menubar.MenubarCheckboxItemProps & React.RefAttributes<HTMLDivElement>>, {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export declare const MenuBarRadioItem: import("@stitches/react/types/styled-component").StyledComponent<React.ForwardRefExoticComponent<Menubar.MenubarRadioItemProps & React.RefAttributes<HTMLDivElement>>, {}, {
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, import("@stitches/react/types/css-util").CSS<{
    xs: string;
    sm: string;
    md: string;
    lg: string;
    xl: string;
    full: string;
    initial: string;
    motion: string;
    safari: string;
    hover: string;
    dark: string;
    light: string;
}, {
    colors: {
        white: string;
        black: string;
        primaryGray: string;
        secondaryGray: string;
        accentHeliotrope: string;
        accentFizz: string;
        transparent: string;
        panel: string;
        transparentPanel: string;
        shadowLight: string;
        shadowDark: string;
        primaryBorder: string;
        primaryBorderHover: string;
        secondaryBorder: string;
        flag: string;
        blur: string;
        atelier00: string;
        atelier01: string;
        atelier02: string;
        atelier03: string;
        brand1: string;
        brand2: string;
        brand3: string;
        brand4: string;
        brand5: string;
        brand6: string;
        brand7: string;
        brand8: string;
        brand9: string;
        brand10: string;
        brand11: string;
        brand12: string;
        limey: string;
        purp: string;
        gray1: string;
        gray2: string;
        gray3: string;
        gray4: string;
        gray5: string;
        gray6: string;
        gray7: string;
        gray8: string;
        gray9: string;
        gray10: string;
        gray11: string;
        gray12: string;
        slate1: string;
        slate2: string;
        slate3: string;
        slate4: string;
        slate5: string;
        slate6: string;
        slate7: string;
        slate8: string;
        slate9: string;
        slate10: string;
        slate11: string;
        slate12: string;
        slateA1: string;
        slateA2: string;
        slateA3: string;
        slateA4: string;
        slateA5: string;
        slateA6: string;
        slateA7: string;
        slateA8: string;
        slateA9: string;
        slateA10: string;
        slateA11: string;
        slateA12: string;
        sky1: string;
        sky2: string;
        sky3: string;
        sky4: string;
        sky5: string;
        sky6: string;
        sky7: string;
        sky8: string;
        sky9: string;
        sky10: string;
        sky11: string;
        sky12: string;
        sky13: string;
        sky14: string;
        sky15: string;
        mauve1: string;
        mauve2: string;
        mauve3: string;
        mauve4: string;
        mauve5: string;
        mauve6: string;
        mauve7: string;
        mauve8: string;
        mauve9: string;
        mauve10: string;
        mauve11: string;
        mauve12: string;
        mauve13: string;
        mauve14: string;
        mauve15: string;
        helios1: string;
        helios2: string;
        helios3: string;
        helios4: string;
        helios5: string;
        helios6: string;
        helios7: string;
        helios8: string;
        helios9: string;
        helios10: string;
        helios11: string;
        helios12: string;
        helios13: string;
        helios14: string;
        helios15: string;
        heliotrope1: string;
        heliotrope2: string;
        heliotrope3: string;
        heliotrope4: string;
        heliotrope5: string;
        heliotrope6: string;
        heliotrope7: string;
        heliotrope8: string;
        heliotrope9: string;
        heliotrope10: string;
        heliotrope11: string;
        heliotrope12: string;
        fizz1: string;
        fizz2: string;
        fizz3: string;
        fizz4: string;
        fizz5: string;
        fizz6: string;
        fizz7: string;
        fizz8: string;
        fizz9: string;
        fizz10: string;
        fizz11: string;
        fizz12: string;
        lime1: string;
        lime2: string;
        lime3: string;
        lime4: string;
        lime5: string;
        lime6: string;
        lime7: string;
        lime8: string;
        lime9: string;
        lime10: string;
        lime11: string;
        lime12: string;
        burn1: string;
        burn2: string;
        burn3: string;
        burn4: string;
        burn5: string;
        burn6: string;
        burn7: string;
        burn8: string;
        burn9: string;
        burn10: string;
        burn11: string;
        burn12: string;
        moon1: string;
        moon2: string;
        moon3: string;
        moon4: string;
        moon5: string;
        moon6: string;
        moon7: string;
        moon8: string;
        moon9: string;
        moon10: string;
        moon11: string;
        moon12: string;
        radical1: string;
        radical2: string;
        radical3: string;
        radical4: string;
        radical5: string;
        radical6: string;
        radical7: string;
        radical8: string;
        radical9: string;
        radical10: string;
        radical11: string;
        radical12: string;
        torch1: string;
        torch2: string;
        torch3: string;
        torch4: string;
        torch5: string;
        torch6: string;
        torch7: string;
        torch8: string;
        torch9: string;
        torch10: string;
        torch11: string;
        torch12: string;
        gold1: string;
        gold2: string;
        gold3: string;
        gold4: string;
        gold5: string;
        gold6: string;
        gold7: string;
        gold8: string;
        gold9: string;
        gold10: string;
        gold11: string;
        gold12: string;
    };
    borderWidths: {
        0: number;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
    };
    zIndices: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        max: string;
    };
    radii: {
        xs: string;
        sm: string;
        md: string;
        base: string;
        lg: string;
        xl: string;
        '2xl': string;
        pill: string;
        none: string;
    };
    space: {
        0: string;
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
        7: string;
        8: string;
        9: string;
        10: string;
        11: string;
        12: string;
        13: string;
        14: string;
        15: string;
        16: string;
        17: string;
        18: string;
        19: string;
        20: string;
    };
    fontWeights: {
        superlite: number;
        thin: number;
        lite: number;
        normal: number;
        medium: number;
        semibold: number;
        bold: number;
        heavy: number;
        black: number;
    };
    fontSizes: {
        xs: string;
        sm: string;
        base: string;
        md: string;
        lg: string;
        xl: string;
        '2xl': string;
        '3xl': string;
        '4xl': string;
        '5xl': string;
        '6xl': string;
        '7xl': string;
        '8xl': string;
        '9xl': string;
    };
    fonts: {
        system: string;
        sans: string;
        mono: string;
        base: string;
        monoMono: string;
        kit: string;
        prag: string;
        lateral: string;
        roboto: string;
    };
}, {
    width: string;
    height: string;
    minWidth: string;
    maxWidth: string;
    minHeight: string;
    maxHeight: string;
    flexBasis: string;
    gridTemplateColumns: string;
    gridTemplateRows: string;
    blockSize: string;
    minBlockSize: string;
    maxBlockSize: string;
    inlineSize: string;
    minInlineSize: string;
    maxInlineSize: string;
    gap: "space";
    gridGap: "space";
    columnGap: "space";
    gridColumnGap: "space";
    rowGap: "space";
    gridRowGap: "space";
    inset: "space";
    insetBlock: "space";
    insetBlockEnd: "space";
    insetBlockStart: "space";
    insetInline: "space";
    insetInlineEnd: "space";
    insetInlineStart: "space";
    margin: "space";
    marginTop: "space";
    marginRight: "space";
    marginBottom: "space";
    marginLeft: "space";
    marginBlock: "space";
    marginBlockEnd: "space";
    marginBlockStart: "space";
    marginInline: "space";
    marginInlineEnd: "space";
    marginInlineStart: "space";
    padding: "space";
    paddingTop: "space";
    paddingRight: "space";
    paddingBottom: "space";
    paddingLeft: "space";
    paddingBlock: "space";
    paddingBlockEnd: "space";
    paddingBlockStart: "space";
    paddingInline: "space";
    paddingInlineEnd: "space";
    paddingInlineStart: "space";
    scrollMargin: "space";
    scrollMarginTop: "space";
    scrollMarginRight: "space";
    scrollMarginBottom: "space";
    scrollMarginLeft: "space";
    scrollMarginBlock: "space";
    scrollMarginBlockEnd: "space";
    scrollMarginBlockStart: "space";
    scrollMarginInline: "space";
    scrollMarginInlineEnd: "space";
    scrollMarginInlineStart: "space";
    scrollPadding: "space";
    scrollPaddingTop: "space";
    scrollPaddingRight: "space";
    scrollPaddingBottom: "space";
    scrollPaddingLeft: "space";
    scrollPaddingBlock: "space";
    scrollPaddingBlockEnd: "space";
    scrollPaddingBlockStart: "space";
    scrollPaddingInline: "space";
    scrollPaddingInlineEnd: "space";
    scrollPaddingInlineStart: "space";
    top: "space";
    right: "space";
    bottom: "space";
    left: "space";
    fontSize: "fontSizes";
    background: "colors";
    backgroundColor: "colors";
    backgroundImage: "colors";
    borderImage: "colors";
    border: "colors";
    borderBlock: "colors";
    borderBlockEnd: "colors";
    borderBlockStart: "colors";
    borderBottom: "colors";
    borderBottomColor: "colors";
    borderColor: "colors";
    borderInline: "colors";
    borderInlineEnd: "colors";
    borderInlineStart: "colors";
    borderLeft: "colors";
    borderLeftColor: "colors";
    borderRight: "colors";
    borderRightColor: "colors";
    borderTop: "colors";
    borderTopColor: "colors";
    caretColor: "colors";
    color: "colors";
    columnRuleColor: "colors";
    outline: "colors";
    outlineColor: "colors";
    fill: "colors";
    stroke: "colors";
    textDecorationColor: "colors";
    fontFamily: "fonts";
    fontWeight: "fontWeights";
    lineHeight: "lineHeights";
    letterSpacing: "letterSpacings";
    borderWidth: "borderWidths";
    borderTopWidth: "borderWidths";
    borderLeftWidth: "borderWidths";
    borderRightWidth: "borderWidths";
    borderBottomWidth: "borderWidths";
    borderStyle: "borderStyles";
    borderTopStyle: "borderStyles";
    borderLeftStyle: "borderStyles";
    borderRightStyle: "borderStyles";
    borderBottomStyle: "borderStyles";
    borderRadius: "radii";
    borderTopLeftRadius: "radii";
    borderTopRightRadius: "radii";
    borderBottomRightRadius: "radii";
    borderBottomLeftRadius: "radii";
    boxShadow: "shadows";
    textShadow: "shadows";
    transition: "transitions";
    zIndex: "zIndices";
}, {}>>;
export {};
//# sourceMappingURL=menu.bar.d.ts.map